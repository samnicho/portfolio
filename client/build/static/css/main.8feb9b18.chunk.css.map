{"version":3,"sources":["../../../styles/_base.scss","../../../styles/_layout.scss","../../../styles/mixins/_breakpoints.scss","Intro.module.scss","../../../../../styles/_base.scss","../../../../../styles/_layout.scss","../../../../../styles/mixins/_breakpoints.scss","ProjectBody.module.scss","ProjectDetail.module.scss","ProjectHeader.module.scss","Footer.module.scss","../../../../styles/_base.scss","../../../../styles/_layout.scss","../../../../styles/mixins/_breakpoints.scss","Project.module.scss","ProjectsMenu.module.scss","../../../../styles/mixins/_centre.scss","Projects.module.scss","About.module.scss","../../styles/_base.scss","../../styles/_layout.scss","../../styles/mixins/_breakpoints.scss","Main.module.scss","_base.scss","mixins/_breakpoints.scss","_layout.scss"],"names":[],"mappings":"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","file":"main.8feb9b18.chunk.css","sourcesContent":["@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 24px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 28px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 35px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import '../../../styles/global';\n\n.intro {\n  position: relative;\n  display: flex;\n  justify-content: center;\n\n  &:before {\n    content: \"\";\n    border-top: 1px dashed;\n    width: 80%;\n    position: absolute;\n    left: 50%;\n    bottom: 0;\n    transform: translateX(-50%);\n  }\n\n  &.projectIsVisible {\n    height: 15vh;\n\n    .intro_logo {\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      transition: 250ms;\n      transform-origin: center;\n\n      &:hover {\n        & :local {\n          animation-name: pulse !important;\n          animation-duration: 1s !important;\n          animation-fill-mode: forwards !important;\n        }\n      }\n\n      a {\n        width: 50px;\n        height: 50px;\n      }\n    }\n\n    .intro_copy {\n      opacity: 0;\n      transition: opacity 200ms;\n    }\n  }\n\n  .intro_logo {\n    position: absolute;\n    top: 5%;\n    left: 5%;\n    z-index: 1;\n    border-radius: 100%;\n    overflow: hidden;\n\n    a {\n      display: flex;\n      width: 65px;\n      height: 65px;\n      transition: 250ms;\n\n      @include breakpoint(\"medium\") {\n        width: 85px;\n        height: 85px;\n      }\n\n      @include breakpoint(\"md-large\") {\n        width: 110px;\n        height: 110px;\n      }\n\n      &:hover {\n        transform-origin: center;\n        transform: scale(1.08);\n      }\n\n      img {\n        width: 100%;\n      }\n    }\n  }\n\n  .intro_copy {\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    opacity: 1;\n    transition: opacity 500ms;\n    transition-delay: 500ms;\n    flex-direction: column;\n    text-align: justify;\n    padding: 0 25px;\n    box-sizing: border-box;\n\n    @include breakpoint(\"medium\") {\n      padding: 0 60px;\n    }\n\n    @include breakpoint(\"x-large\") {\n      padding: 0 150px;\n    }\n\n    h1 {\n      a {\n        text-decoration: none;\n        color: inherit;\n        z-index: 0;\n        position: relative;\n        display: inline-block;\n        font-size: inherit;\n\n        span {\n          position: relative;\n\n          &:after {\n            content: \"\";\n            border-bottom: 2px dashed;\n            position: absolute;\n            bottom: 0;\n            left: 0;\n            width: 105%;\n          }\n        }\n\n        &:before {\n          content: \"\";\n          display: block;\n          width: 0;\n          height: 40px;\n          transition: 300ms;\n          background-color: yellow;\n          position: absolute;\n          top: 24px;\n          left: -11px;\n          transform: rotate(-6deg);\n          z-index: -1;\n          transform-origin: left;\n        }\n\n        &:hover {\n          &:before {\n            width: 110%;\n          }\n        }\n      }\n    }\n  }\n}\n\n@keyframes pulse {\n  0% {  transform: translate(-50%, -50%) scale(1); }\n  40% { transform: translate(-50%, -50%) scale(1.15); }\n  60% { transform: translate(-50%, -50%) scale(1); }\n  70% { transform: translate(-50%, -50%) scale(1.05); }\n  100% {transform: translate(-50%, -50%) scale(1); }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 24px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 28px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 35px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import '../../../../../styles/global';\n\n.projectBody {\n  padding: 20px 10px 20px;\n  transition: 1100ms;\n\n  @include breakpoint('md-large') {\n    padding: 20px 20px 40px;\n  }\n\n  section {\n    &.projectBody_copy {\n      p {\n        width: 95%;\n        margin: 0 auto;\n        display: block;\n        padding: 10px;\n        position: relative;\n        z-index: 1;\n\n        @include breakpoint('md-large') {\n          padding: 20px;\n        }\n      }\n    }\n\n    &.projectBody_img {\n      margin: 0 auto;\n      display: block;\n      width: 90%;\n\n      img {\n        padding: 20px 10px;\n        box-sizing: border-box;\n        width: 100%;\n\n        @include breakpoint('md-large') {\n          padding: 30px 10px;\n        }\n\n        @include breakpoint('x-large') {\n          width: 50%;\n        }\n      }\n    }\n  }\n}\n",".projectHeader_detailWrapper {\n  display: flex;\n  flex-direction: column;\n  padding: 0 10px;\n  box-sizing: border-box;\n  flex: 30% 1;\n\n  .projectHeader_detailLabel {\n    border-bottom: 1px dotted gray;\n    padding: 10px 0;\n\n    h3 {\n      position: relative;\n      display: inline-block;\n\n      &:before {\n        content: \"\";\n        display: block;\n        width: 150%;\n        height: 29px;\n        background-color: #fdf141;\n        position: absolute;\n        top: 0;\n        left: -10px;\n        width: calc(100% + 20px);\n        transform: rotate(-3deg);\n        z-index: -1;\n      }\n    }\n  }\n\n  .projectHeader_detail {\n    padding: 10px 0 5px;\n  }\n}\n","@import '../../../../../styles/global.scss';\n\n.projectHeader {\n  opacity: 1;\n  transition: 900ms;\n  border-bottom: 1px dotted gray;\n\n  &.pageTransition {\n    opacity: 0;\n  }\n\n  .projectHeader_header {\n    height: 80vh;\n    max-height: 225px;\n    overflow: hidden;\n    position: relative;\n\n    @include breakpoint('md-large') {\n      max-height: 350px;\n    }\n\n    .projectHeader_headerImg {\n      position: absolute;\n      width: 125%;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    .projectHeader_headerTitle {\n      position: absolute;\n      bottom: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n\n      @include breakpoint('md-large') {\n        padding: 20px 20px 50px 40px;\n      }\n\n      h1 {\n        font-size: 22px;\n        margin: 0 0 10px;\n        position: relative;\n        z-index: 1;\n\n        @include breakpoint('md-large') {\n          font-size: 34px;\n        }\n\n        &:before {\n          content: \"\";\n          display: block;\n          height: 35px;\n          transition: 300ms;\n          background-color: #fdf141;\n          position: absolute;\n          top: 0;\n          left: -18px;\n          width: calc(100% + 36px);\n          transform: rotate(-3deg);\n          z-index: -1;\n          transform-origin: center;\n\n          @include breakpoint('md-large') {\n            height: 50px;\n          }\n        }\n      }\n\n      h3 {\n        font-size: 18px;\n        margin: 0;\n        position: relative;\n        z-index: 1;\n\n        @include breakpoint('md-large') {\n          font-size: 24px;\n        }\n\n        &:before {\n          content: \"\";\n          display: block;\n          width: 110%;\n          height: 35px;\n          transition: 300ms;\n          background-color: #fdf141;\n          position: absolute;\n          top: 0px;\n          left: -11px;\n          width: calc(100% + 22px);\n          transform: rotate(-1.3deg);\n          z-index: -1;\n          transform-origin: left;\n\n          @include breakpoint('md-large') {\n            height: 40px;\n          }\n        }\n      }\n    }\n  }\n\n  .projectHeader_details {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    padding: 10px 0px;\n\n    @include breakpoint('md-large') {\n      padding: 15px 0 20px;\n    }\n  }\n}\n",".footer {\n    padding: 25px 0 5px;\n    text-align: center;\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n    border-top: 1px dashed;\n\n    .footer_contact {\n        display: flex;\n        flex: 50% 0;\n        justify-content: space-evenly;\n\n        a {\n            color: black;\n            text-decoration: none;\n\n            i {\n                margin-right: 5px;\n            }\n        }\n    }\n\n    .footer_links {\n        display: flex;\n        flex: 50% 0;\n        justify-content: space-evenly;\n    }\n}","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 24px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 28px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 35px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import '../../../../styles/global';\n\n.projectWrapper {\n  .projectWrapper_inner {\n    box-sizing: border-box;\n    height: 100%;\n    padding: 25px;\n    overflow-y: scroll;\n    position: relative;\n  }\n}\n","@import '../../../../styles/global.scss';\n\n.projectsMenu {\n  opacity: 1;\n  height: 100%;\n  transition: 1s;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n  padding: 20px;\n  justify-content: center;\n\n  &__mini {\n    padding: 12px;\n    justify-content: space-evenly;\n    flex-direction: column;\n    z-index: 3;\n    background-color: #ffffff;\n\n    &:after {\n      content: '';\n      border-right: 1px dashed;\n      position: absolute;\n      right: 0;\n      transform: translateY(-50%);\n      top: 50%;\n      height: 95vh;\n      z-index: 2;\n    }\n\n    .projectTile {\n      margin: 10px 0 !important;\n      flex: 10% 0 !important;\n\n      .logo {\n        & :local {\n          animation-name: fadeIn !important;\n          animation-duration: 1s !important;\n          animation-fill-mode: forwards !important;\n        }\n      }\n\n      .title {\n        & :local {\n          animation-name: fadeOut !important;\n          animation-duration: 1s !important;\n          animation-fill-mode: forwards !important;\n        }\n      }\n    }\n  }\n\n  .projectTile {\n    border: 10px solid white;\n    box-sizing: border-box;\n    flex: 100% 0;\n    max-width: 425px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    overflow: hidden;\n\n    @include breakpoint('md-large') {\n      flex: 50% 0;\n    }\n\n    &:hover {\n      .image {\n        filter: grayscale(100%);\n      }\n\n      > div {  \n        .title {\n          &:after {\n            content: \"\";\n            display: block;\n            height: 37px;\n            background-color: #fdf141;\n            position: absolute;\n            top: -12px;\n            left: 50%;\n            transform: rotate(-3deg) translateX(-50%);\n            z-index: -1;\n            width: 150%;\n          }\n        }\n      }\n    }\n\n    .image {\n      height: 175%;\n      @include centre();\n      transform: translate(-50%, -50%);\n      transition: 250ms;\n      filter: grayscale(0%);\n    }\n\n    > div {\n      position: relative;\n\n      .title {\n        position: relative;\n        color: black;\n        z-index: 2;\n\n        &:after {\n          content: \"\";\n          transition: 250ms;\n          display: block;\n          height: 37px;\n          background-color: #fdf141;\n          position: absolute;\n          top: -12px;\n          left: 50%;\n          transform: rotate(-3deg) translateX(-50%);\n          z-index: -1;\n          width: 150%;\n        }\n      }\n    }\n\n    .btn {\n      position: absolute;\n      bottom: 5%;\n      right: 8%;\n      padding: 10px;\n      z-index: 2;\n    }\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n}\n","@mixin centre($xy:xy) {\n    @if $xy == xy {\n        position:absolute;\n        left: 50%;\n        top: 50%;\n        bottom: auto;\n        right: auto;\n        transform: translate(-50%, -50%);\n    }\n    @else if $xy == x {\n        position: absolute;\n        left: 50%;\n        right: auto;\n        transform: translateX(-50%);\n    }\n    @else if $xy == y {\n        position: absolute;\n        top: 50%;\n        bottom: auto;\n        transform: translateY(-50%);\n    }\n}",".projects {\n  &.projectIsVisible {\n    height: 70vh;\n  }\n}\n",".about {\n  text-align: justify;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n\n  &:before {\n    content: \"\";\n    border-top: 1px dashed;\n    width: 80%;\n    position: absolute;\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n  }\n\n  .icon {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: 500ms;\n    z-index: 1;\n\n    i {\n      font-size: 30px;\n      color: #3e3e3e;\n      transition: 250ms;\n      transform-origin: center;\n\n      &:hover {\n        transform: scale(1.2);\n      }\n    }\n  }\n\n  h2 {\n    width: 80%;\n  }\n\n  .footer {\n    width: 90%;\n    padding-bottom: 25px;\n  }\n\n  &.projectIsVisible {\n    height: 15vh;\n\n    .icon {\n      opacity: 1;\n      transition: 500ms;\n    }\n\n    h2, .footer {\n      opacity: 0;\n      transition: opacity 200ms;\n    }\n  }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 24px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 28px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 35px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import \"../../styles/global.scss\";\n\nmain {\n  height: auto;\n  transition: 0.5s;\n  position: relative;\n  overflow: hidden;\n\n  > section,\n  > header {\n    transition: 500ms;\n    background-color: white;\n  }\n\n  .menuTab {\n    display: none;\n  }\n\n  &:not(.projectIsVisible) {\n    > section,\n    > header {\n      height: 95vh;\n      min-height: 600px;\n    }\n  }\n\n  &.projectIsVisible {\n    height: 100vh;\n    transform: translateX(-20%);\n    width: 125%;\n\n    > section {\n      width: 20%;\n      box-shadow: 3px 0 3px #616161;\n      z-index: 2;\n    }\n\n    > section:nth-child(3) {\n      box-shadow: 3px -1px 3px #616161;\n    }\n\n    > header {\n        width: 20%;\n        box-shadow: 3px 0 3px #616161;\n        z-index: 3;\n    }\n\n    // .projectWrapper\n    > section:nth-child(2) > div:nth-child(2) {\n        transition: 1s;\n        transition-delay: 500ms;\n        transform: translateX(25%);\n        transform-origin: left;\n        position: absolute;\n        top: 0;\n        width: 80%;\n        background: white;\n        height: 100%;\n        z-index: -1;\n    }\n\n    &.menuIsVisible {\n      transform: translateX(0%);\n      width: 100%;\n\n      // .projectWrapper\n      > section:nth-child(2) > div:nth-child(2) {\n        width: 100%;\n        z-index: -1;\n        transition-delay: 0.5s;\n        transform: translateX(0%);\n        opacity: 1;\n      }\n    }\n\n    @include breakpoint(\"md-large\") {\n      transform: translateX(0%);\n      width: 100%;\n    }\n\n    .menuTab {\n      position: absolute;\n      left: 19.8%;\n      top: 10%;\n      z-index: 3;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      padding: 10px 8px 9px 5px;\n      border-top: 1px dashed;\n      border-right: 1px dashed;\n      border-bottom: 1px dashed;\n      border-radius: 0 10% 10% 0;\n      background-color: #ffffff;\n      box-shadow: 3px 3px 3px #616161;\n\n      @include breakpoint(\"md-large\") {\n        display: none;\n      }\n\n      i {\n        font-size: 30px;\n        font-weight: lighter;\n      }\n    }\n  }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 24px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 28px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 35px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n"]}