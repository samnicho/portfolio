{"version":3,"sources":["../../../styles/_base.scss","../../../styles/_layout.scss","../../../styles/mixins/_breakpoints.scss","Intro.module.scss","../../../../../styles/_base.scss","../../../../../styles/_layout.scss","../../../../../styles/mixins/_breakpoints.scss","ProjectBody.module.scss","../../../../../../styles/_base.scss","../../../../../../styles/_layout.scss","../../../../../../styles/mixins/_breakpoints.scss","ProjectDetail.module.scss","ProjectHeader.module.scss","Footer.module.scss","../../../../styles/_base.scss","../../../../styles/_layout.scss","../../../../styles/mixins/_breakpoints.scss","Project.module.scss","ProjectsMenu.module.scss","../../../../styles/mixins/_centre.scss","Projects.module.scss","About.module.scss","../../styles/_base.scss","../../styles/_layout.scss","../../styles/mixins/_breakpoints.scss","Main.module.scss","_base.scss","mixins/_breakpoints.scss","_layout.scss"],"names":[],"mappings":"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","file":"main.341defb3.chunk.css","sourcesContent":["@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n$highlighter: #fdf141;\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 22px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 26px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 30px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 20px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 24px;\n  }\n}\n\nh4 {\n  font-size: 15px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 18px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import '../../../styles/global';\n\n.intro {\n  position: relative;\n  display: flex;\n  justify-content: center;\n\n  &:before {\n    content: \"\";\n    border-top: 1px dashed;\n    width: 80%;\n    position: absolute;\n    left: 50%;\n    bottom: 0;\n    transform: translateX(-50%);\n  }\n\n  &.projectIsVisible {\n    height: 15vh;\n\n    .intro_logo {\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      transition: 250ms;\n      transform-origin: center;\n\n      &:hover {\n        & :local {\n          animation-name: pulse !important;\n          animation-duration: 1s !important;\n          animation-fill-mode: forwards !important;\n        }\n      }\n\n      a {\n        width: 50px;\n        height: 50px;\n      }\n    }\n\n    .intro_copy {\n      opacity: 0;\n      transition: opacity 200ms;\n      overflow: hidden;\n    }\n  }\n\n  .intro_logo {\n    position: absolute;\n    top: 5%;\n    left: 5%;\n    z-index: 1;\n    border-radius: 100%;\n    overflow: hidden;\n\n    a {\n      display: flex;\n      width: 65px;\n      height: 65px;\n      transition: 250ms;\n\n      @include breakpoint(\"medium\") {\n        width: 85px;\n        height: 85px;\n      }\n\n      @include breakpoint(\"md-large\") {\n        width: 110px;\n        height: 110px;\n      }\n\n      &:hover {\n        transform-origin: center;\n        transform: scale(1.08);\n      }\n\n      img {\n        width: 100%;\n      }\n    }\n  }\n\n  .intro_copy {\n    display: flex;\n    justify-content: space-around;\n    height: 100%;\n    opacity: 1;\n    transition: opacity 500ms;\n    transition-delay: 500ms;\n    flex-direction: column;\n    text-align: justify;\n    padding: 0 25px;\n    box-sizing: border-box;\n\n    @include breakpoint(\"medium\") {\n      padding: 0 60px;\n    }\n\n    @include breakpoint(\"x-large\") {\n      padding: 0 150px;\n    }\n\n    h1 {\n      padding-top: 30%;\n      position: relative;\n      z-index: 0;\n\n      @include breakpoint(\"md-large\") {\n        padding-top: 25%;\n      }\n\n      @include breakpoint(\"x-large\") {\n        padding-top: 15%;\n      }      \n\n      a {\n        text-decoration: none;\n        color: inherit;\n        z-index: 0;\n        position: relative;\n        display: inline-block;\n        font-size: inherit;\n\n        span {\n          position: relative;\n\n          &:after {\n            content: \"\";\n            border-bottom: 2px dashed;\n            position: absolute;\n            bottom: 0;\n            left: 0;\n            width: 105%;\n          }\n        }\n\n        &:before {\n          content: \"\";\n          display: block;\n          width: 0;\n          height: 40px;\n          transition: 300ms;\n          background-color: $highlighter;\n          position: absolute;\n          top: 13px;\n          left: -11px;\n          transform: rotate(-6deg);\n          z-index: -1;\n          transform-origin: left;\n        }\n\n        &:hover {\n          &:before {\n            width: 120%;\n          }\n        }\n      }\n    }\n  }\n\n  .intro_note {\n    align-self: flex-end;\n    position: relative;\n    z-index: 1;\n\n    &:after {\n      content: \"\";\n      transition: 250ms;\n      display: block;\n      height: 130%;\n      background-color: $highlighter;\n      position: absolute;\n      top: -35%;\n      left: 50%;\n      transform: rotate(-3deg) translateX(-50%);\n      z-index: -1;\n      width: 120%;\n    }\n\n    @include breakpoint('md-large') {\n      width: 70%;\n    }\n\n    @include breakpoint('x-large') {\n      width: 50%;\n    }\n\n    h4 {\n      position: relative;\n      z-index: 0;\n      \n      span {\n        position: absolute;\n        z-index: -1;\n        left: -12px;\n        top: -8px;\n        font-size: 20px;\n\n        &:before {\n          content: \"\";\n          display: block;\n          width: 38px;\n          height: 10px;\n          padding: 5px;\n          // background-color: yellow;\n          position: absolute;\n          top: 6px;\n          left: -17px;\n          transform: rotate(-27deg);\n          z-index: -1;\n        }\n      }\n    }\n  }\n}\n\n@keyframes pulse {\n  0% {  transform: translate(-50%, -50%) scale(1); }\n  40% { transform: translate(-50%, -50%) scale(1.15); }\n  60% { transform: translate(-50%, -50%) scale(1); }\n  70% { transform: translate(-50%, -50%) scale(1.05); }\n  100% {transform: translate(-50%, -50%) scale(1); }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n$highlighter: #fdf141;\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 22px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 26px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 30px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 20px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 24px;\n  }\n}\n\nh4 {\n  font-size: 15px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 18px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import '../../../../../styles/global';\n\n.projectBody {\n  padding: 20px 10px 20px;\n  transition: 1100ms;\n\n  @include breakpoint('md-large') {\n    padding: 20px 20px 40px;\n  }\n\n  section {\n    &.projectBody_copy {\n      p {\n        width: 95%;\n        margin: 0 auto;\n        display: block;\n        padding: 10px;\n        position: relative;\n        z-index: 1;\n\n        @include breakpoint('md-large') {\n          padding: 20px;\n        }\n\n        &:nth-child(odd) {\n          padding: 10px 10px 0 10px;\n  \n          @include breakpoint('md-large') {\n            padding: 20px 20px 0 20px;\n          }\n\n        }\n      }\n    }\n\n    &.projectBody_img {\n      margin: 0 auto;\n      display: block;\n      width: 90%;\n\n      img {\n        padding: 20px 10px;\n        box-sizing: border-box;\n        width: 100%;\n\n        @include breakpoint('md-large') {\n          padding: 30px 10px;\n        }\n\n        @include breakpoint('x-large') {\n          width: 50%;\n        }\n      }\n    }\n  }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n$highlighter: #fdf141;\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 22px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 26px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 30px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 20px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 24px;\n  }\n}\n\nh4 {\n  font-size: 15px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 18px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import '../../../../../../styles/global.scss';\n\n.projectHeader_detailWrapper {\n  display: flex;\n  flex-direction: column;\n  padding: 0 10px;\n  box-sizing: border-box;\n  flex: 30% 1;\n\n  .projectHeader_detailLabel {\n    border-bottom: 1px dotted gray;\n    padding: 10px 0;\n\n    h3 {\n      position: relative;\n      display: inline-block;\n\n      &:before {\n        content: \"\";\n        display: block;\n        width: 150%;\n        height: 29px;\n        background-color: $highlighter;\n        position: absolute;\n        top: 0;\n        left: -10px;\n        width: calc(100% + 20px);\n        transform: rotate(-3deg);\n        z-index: -1;\n      }\n    }\n  }\n\n  .projectHeader_detail {\n    padding: 10px 0 5px;\n  }\n}\n","@import '../../../../../styles/global.scss';\n\n.projectHeader {\n  opacity: 1;\n  transition: 900ms;\n  border-bottom: 1px dotted gray;\n\n  &.pageTransition {\n    opacity: 0;\n  }\n\n  .projectHeader_header {\n    height: 80vh;\n    max-height: 225px;\n    overflow: hidden;\n    position: relative;\n\n    @include breakpoint('md-large') {\n      max-height: 350px;\n    }\n\n    .projectHeader_headerImg {\n      position: absolute;\n      width: 125%;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    .projectHeader_headerTitle {\n      position: absolute;\n      bottom: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n\n      @include breakpoint('md-large') {\n        padding: 20px 20px 50px 40px;\n      }\n\n      h1 {\n        font-size: 22px;\n        margin: 0 0 10px;\n        position: relative;\n        z-index: 1;\n\n        @include breakpoint('md-large') {\n          font-size: 34px;\n        }\n\n        &:before {\n          content: \"\";\n          display: block;\n          height: 35px;\n          transition: 300ms;\n          background-color: $highlighter;\n          position: absolute;\n          top: 0;\n          left: -18px;\n          width: calc(100% + 36px);\n          transform: rotate(-3deg);\n          z-index: -1;\n          transform-origin: center;\n\n          @include breakpoint('md-large') {\n            height: 50px;\n          }\n        }\n      }\n\n      h3 {\n        font-size: 18px;\n        margin: 0;\n        position: relative;\n        z-index: 1;\n\n        @include breakpoint('md-large') {\n          font-size: 24px;\n        }\n\n        &:before {\n          content: \"\";\n          display: block;\n          height: 110%;\n          transition: 300ms;\n          background-color: $highlighter;\n          position: absolute;\n          top: 0px;\n          left: -11px;\n          width: calc(100% + 22px);\n          transform: rotate(-1.3deg);\n          z-index: -1;\n          transform-origin: left;\n\n          @include breakpoint('md-large') {\n            height: 40px;\n          }\n        }\n      }\n    }\n  }\n\n  .projectHeader_details {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-direction: column;\n    padding: 10px 0px;\n\n    @include breakpoint('medium') {\n      flex-direction: row;\n    }\n\n    @include breakpoint('md-large') {\n      padding: 15px 0 20px;\n    }\n  }\n}\n","@import \"../../../styles/global.scss\";\n\n.footer {\n  padding: 20px 0 0;\n  text-align: center;\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  border-top: 1px dashed;\n  flex-direction: column;\n  box-sizing: border-box;\n\n  @include breakpoint(\"large\") {\n    flex-direction: row;\n    padding: 25px 15px 5px;\n  }\n\n  .footer_contact {\n    display: flex;\n    flex: 75% 0;\n    justify-content: flex-start;\n    flex-direction: column;\n\n    @include breakpoint(\"large\") {\n      flex-direction: row;\n    }\n\n    a {\n      color: black;\n      text-decoration: none;\n      padding: 10px 5px;\n\n      @include breakpoint(\"large\") {\n        padding: 0 10% 0 5px;\n      }\n\n      i {\n        margin-right: 5px;    \n        font-size: 18px;\n      }\n    }\n  }\n\n  .footer_links {\n    display: flex;\n    flex: 25% 0;\n    justify-content: center;\n\n    @include breakpoint(\"large\") {\n      justify-content: flex-end;\n    }\n\n    a {\n      padding: 10px 15px;    \n      font-size: 18px;\n\n      @include breakpoint(\"large\") {\n        padding: 0 5px 0 20%;\n      }\n    }\n  }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n$highlighter: #fdf141;\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 22px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 26px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 30px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 20px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 24px;\n  }\n}\n\nh4 {\n  font-size: 15px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 18px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import '../../../../styles/global';\n\n.projectWrapper {\n  .projectWrapper_inner {\n    box-sizing: border-box;\n    height: 100%;\n    padding: 25px;\n    overflow-y: scroll;\n    position: relative;\n  }\n}\n","@import '../../../../styles/global.scss';\n\n.projectsMenu {\n  opacity: 1;\n  height: 100%;\n  transition: 1s;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n  padding: 20px;\n  justify-content: center;\n\n  &__mini {\n    padding: 12px;\n    justify-content: space-evenly;\n    flex-direction: column;\n    z-index: 3;\n    background-color: #ffffff;\n\n    @include breakpoint('md-large') { \n      &:after {\n        content: '';\n        border-right: 1px dashed;\n        position: absolute;\n        right: -1px;\n        transform: translateY(-50%);\n        top: 50%;\n        height: 95vh;\n        z-index: 2;\n      }\n    }\n\n    .projectTile {\n      margin: 10px 0 !important;\n      flex: 10% 0 !important;\n\n      .logo {\n        & :local {\n          animation-name: fadeIn !important;\n          animation-duration: 1s !important;\n          animation-fill-mode: forwards !important;\n        }\n      }\n\n      .title {\n        & :local {\n          animation-name: fadeOut !important;\n          animation-duration: 1s !important;\n          animation-fill-mode: forwards !important;\n        }\n      }\n    }\n  }\n\n  .projectTile {\n    border: 10px solid white;\n    box-sizing: border-box;\n    flex: 100% 0;\n    max-width: 425px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    overflow: hidden;\n\n    @include breakpoint('md-large') {\n      flex: 50% 0;\n    }\n\n    &:hover {\n      .image {\n        filter: grayscale(100%);\n      }\n    }\n\n    .image {\n      height: 175%;\n      @include centre();\n      transform: translate(-50%, -50%);\n      transition: 250ms;\n      filter: grayscale(0%);\n    }\n\n    > div {\n      position: relative;\n\n      .title {\n        position: relative;\n        color: black;\n        z-index: 2;\n\n        &:after {\n          content: \"\";\n          transition: 250ms;\n          display: block;\n          height: 40px;\n          background-color: $highlighter;\n          position: absolute;\n          top: -10px;\n          left: 50%;\n          transform: rotate(-3deg) translateX(-50%);\n          z-index: -1;\n          width: 130%;\n        }\n      }\n    }\n\n    .btn {\n      position: absolute;\n      bottom: 5%;\n      right: 8%;\n      padding: 10px;\n      z-index: 2;\n    }\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n}\n","@mixin centre($xy:xy) {\n    @if $xy == xy {\n        position:absolute;\n        left: 50%;\n        top: 50%;\n        bottom: auto;\n        right: auto;\n        transform: translate(-50%, -50%);\n    }\n    @else if $xy == x {\n        position: absolute;\n        left: 50%;\n        right: auto;\n        transform: translateX(-50%);\n    }\n    @else if $xy == y {\n        position: absolute;\n        top: 50%;\n        bottom: auto;\n        transform: translateY(-50%);\n    }\n}",".projects {\n  &.projectIsVisible {\n    height: 70vh;\n  }\n}\n","@import \"../../../styles/global.scss\";\n\n.about {\n  text-align: justify;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n\n  &:before {\n    content: \"\";\n    border-top: 1px dashed;\n    width: 80%;\n    position: absolute;\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n  }\n\n  .icon {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: 500ms;\n    z-index: 1;\n\n    &:hover {\n      & :local {\n        animation-name: pulse !important;\n        animation-duration: 1s !important;\n        animation-fill-mode: forwards !important;\n      }\n    }\n\n    i {\n      font-size: 30px;\n      color: #3e3e3e;\n      transition: 250ms;\n      transform-origin: center;\n\n      &:hover {\n        transform: scale(1.2);\n      }\n    }\n  }\n\n  h4 {\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n\n    @include breakpoint(0, \"medium\") {\n      width: 95%;\n      padding: 30px 0 20px;\n      font-size: 15px;\n    }\n\n    a {\n      font-size: inherit;\n      padding-top: 25px;\n      position: relative;\n      align-self: flex-start;\n      z-index: 1;\n\n      &:after {\n        content: \"\";\n        transition: 250ms;\n        display: block;\n        height: 40px;\n        background-color: $highlighter;\n        position: absolute;\n        top: 13px;\n        left: 50%;\n        transform: rotate(-3deg) translateX(-50%);\n        z-index: -1;\n        width: 120%;\n      }\n\n      i {\n        padding-right: 10px;\n      }\n    }\n  }\n\n  .footer {\n    width: 90%;\n    padding-bottom: 25px;\n  }\n\n  &.projectIsVisible {\n    height: 15vh;\n\n    .icon {\n      opacity: 1;\n      transition: 500ms;\n    }\n\n    h4,\n    .footer {\n      opacity: 0;\n      transition: opacity 200ms;\n    }\n  }\n}\n\n@keyframes pulse {\n  0% {\n    transform: translate(-50%, -50%) scale(1);\n  }\n  40% {\n    transform: translate(-50%, -50%) scale(1.15);\n  }\n  60% {\n    transform: translate(-50%, -50%) scale(1);\n  }\n  70% {\n    transform: translate(-50%, -50%) scale(1.05);\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(1);\n  }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n$highlighter: #fdf141;\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 22px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 26px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 30px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 20px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 24px;\n  }\n}\n\nh4 {\n  font-size: 15px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 18px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","@import \"../../styles/global.scss\";\n\nmain {\n  height: auto;\n  transition: 0.5s;\n  position: relative;\n  overflow: hidden;\n\n  > section,\n  > header {\n    transition: 500ms;\n    background-color: white;\n  }\n\n  .menuTab {\n    display: none;\n  }\n\n  &:not(.projectIsVisible) {\n    > section,\n    > header {\n      height: 95vh;\n      min-height: 600px;\n    }\n  }\n\n  &.projectIsVisible {\n    height: 100vh;\n    transform: translateX(-20%);\n    width: 125%;\n\n    > section {\n      width: 20%;\n      z-index: 3;\n      box-shadow: 3px 0 3px #616161;\n\n      @include breakpoint('md-large') {\n        box-shadow: none;\n      }\n    }\n\n    > section:nth-child(3) {\n      box-shadow: 3px -1px 3px #616161;\n      z-index: 2;\n\n      @include breakpoint('md-large') {\n        box-shadow: none;\n      }\n    }\n\n    > header {\n        width: 20%;\n        box-shadow: 3px 0 3px #616161;\n        z-index: 3;\n\n        @include breakpoint('md-large') {\n          box-shadow: none;\n        }\n    }\n\n    // .projectWrapper\n    > section:nth-child(2) > div:nth-child(2) {\n        transition: 1s;\n        transition-delay: 500ms;\n        transform: translateX(25%);\n        transform-origin: left;\n        position: absolute;\n        top: 0;\n        width: 80%;\n        background: white;\n        height: 100%;\n        z-index: -1;\n    }\n\n    @include breakpoint(0, 'large') {\n      &.menuIsVisible {\n        transform: translateX(0%);\n        width: 100%;\n  \n        // .projectWrapper\n        > section:nth-child(2) > div:nth-child(2) {\n          width: 100%;\n          z-index: -1;\n          transition-delay: 0.5s;\n          transform: translateX(0%);\n          opacity: 1;\n        }\n      }\n    }\n\n    @include breakpoint(\"md-large\") {\n      transform: translateX(0%);\n      width: 100%;\n    }\n\n    .menuTab {\n      position: absolute;\n      left: 19.8%;\n      top: 10%;\n      z-index: 3;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      padding: 10px 8px 9px 10px;\n      border-radius: 0 10% 10% 0;\n      background-color: #ffffff;\n      box-shadow: 3px 3px 3px #616161;\n\n      @include breakpoint(\"md-large\") {\n        display: none;\n      }\n\n      i {\n        font-size: 30px;\n        font-weight: lighter;\n      }\n    }\n  }\n}\n","@font-face {\n  font-family: \"Lora\";\n  src: url(\"../assets/fonts/Lora-Regular.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n$highlighter: #fdf141;\n\nbody {\n  overflow-x: hidden;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\na {\n  font-family: Lora;\n  margin: 0;\n  line-height: 1.5;\n  color: #191919;\n}\n\nh1 {\n  font-size: 22px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 26px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 30px;\n  }\n}\n\nh2 {\n  font-size: 20px;  \n  \n  @include breakpoint(\"medium\") {\n    font-size: 22px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 28px;\n  }\n}\n\nh3 {\n  font-size: 18px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 20px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 24px;\n  }\n}\n\nh4 {\n  font-size: 15px;\n\n  @include breakpoint(\"medium\") {\n    font-size: 18px;\n  }\n\n  @include breakpoint(\"md-large\") {\n    font-size: 20px;\n  }\n}\n\np, a {\n  font-size: 14px;\n\n  @include breakpoint(\"md-large\") {\n    font-size: 16px;\n  }\n}\n\nbody {\n  margin: 0;\n}\n","// MEDIA QUERY BREAKPOINTS\n// -------------------------------------------------------\n// small      320px  - (content: 295px)  - 479px \n// medium\t  480px  - (content: 455px)  - 639px \n// large      640px  - (content: 600px)  - 767px \n// md-large\t  768px  - (content: 730px)  - 1023px \n// x-large    1024px - (content: 970px)  - 1365px \n// xx-large\t  1366px - (content: 1300px) - 1919px\n// xxx-large  1920px - (content: 1800px)\n\n@mixin breakpoint($min: 0, $max: 0) {\n    $min-type: type-of($min);\n    $max-type: type-of($max);\n    $max-width: 0;\n\n    //set max-width variable for min-max and max-width queries\n    @if $max-type == string {      \n        @if $max == small { $max-width: 479px }\n        @else if $max == medium { $max-width: 639px }\n        @else if $max == large { $max-width: 767px }\n        @else if $max == md-large { $max-width: 1023px }\n        @else if $max == x-large { $max-width: 1365px }\n        @else if $max == xx-large { $max-width: 1919px }\n    }\n\n    // Set min-width and min-max queries\n    @if $min-type == string {\n        @if $min == small {\n            @if $max-type == string { \n                @media (min-width: 320px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 320px) { @content; }\n            }\n        }\n        @else if $min == medium {\n            @if $max-type == string { \n                @media (min-width: 480px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 480px) { @content; }\n            }\n        }    \n        @else if $min == large {\n            @if $max-type == string { \n                @media (min-width: 640px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 640px) { @content; }\n            }\n        }\n        @else if $min == md-large {\n            @if $max-type == string {\n                @media (min-width: 768px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 768px) { @content; }\n            }\n        }    \n        @else if $min == x-large {\n            @if $max-type == string { \n                @media (min-width: 1024px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1024px) { @content; }\n            }\n        }    \n        @else if $min == xx-large {\n            @if $max-type == string { \n                @media (min-width: 1366px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1366px) { @content; }\n            }\n        }\n        @else if $min == xxx-large {\n            @if $max-type == string { \n                @media (min-width: 1920px) and (max-width: $max-width) { @content; }\n            }\n            @else {\n                @media (min-width: 1920px) { @content; }\n            }\n        }\n\n        // Otherwise pass a warning to the compiler as to the appropriate options\n        @else {\n            @warn \"The breakpoint mixin supports the following attributes: small, medium, large, md-large, x-large, xx-large, xxx-large\";\n        }\n    }\n\n    // Set max-width queries\n    @else if $min-type == number {   \n        @media (max-width: $max-width) { @content; }\n    }\n}","  .container {\n    margin: 0 auto;\n    padding-left: 0;\n    padding-right: 0;\n    min-width: 305px;\n    box-sizing: border-box;\n\n    @include breakpoint(small) {\n        width: 320px;\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n\n    @include breakpoint(medium) {\n        width: 445px;\n    }\n\n    @include breakpoint(large) {\n        width: 600px;\n    }\n\n    @include breakpoint(md-large) {\n        width: 730px;\n    }\n\n    @include breakpoint(x-large) {\n        width: 970px;\n    }\n\n    @include breakpoint(xx-large) {\n        width: 1300px;\n    }\n}\n"]}